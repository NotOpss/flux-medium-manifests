---
# Source: locust/templates/master-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: locust-master
  labels:
    helm.sh/chart: locust-0.20.2
    app.kubernetes.io/name: locust
    app.kubernetes.io/instance: locust
    load_test: my-loadtest
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: locust/templates/worker-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: locust-worker
  labels:
    helm.sh/chart: locust-0.20.2
    app.kubernetes.io/name: locust
    app.kubernetes.io/instance: locust
    load_test: my-loadtest
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: locust/templates/configmap-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: locust-config
  labels:
    helm.sh/chart: locust-0.20.2
    app.kubernetes.io/name: locust
    app.kubernetes.io/instance: locust
    load_test: my-loadtest
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  docker-entrypoint.sh: |
    #!/bin/sh

    set -eu

    exec /usr/local/bin/locust $@
---
# Source: locust/templates/configmap-locust-lib.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: locust-lib
  labels:
    helm.sh/chart: locust-0.20.2
    app.kubernetes.io/name: locust
    app.kubernetes.io/instance: locust
    load_test: my-loadtest
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  {}
---
# Source: locust/templates/master-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: locust
  labels:
    helm.sh/chart: locust-0.20.2
    app.kubernetes.io/name: locust
    app.kubernetes.io/instance: locust
    load_test: my-loadtest
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
    component: "master"
spec:
  type: ClusterIP
  ports:
  - name: master-p1
    port: 5557
    protocol: TCP
    targetPort: 5557
  - name: master-p2
    port: 5558
    protocol: TCP
    targetPort: 5558
  - name: master-p3
    port: 8089
    protocol: TCP
    targetPort: 8089
  - name: metrics
    port: 9646
    protocol: TCP
    targetPort: 9646
  selector:
    component: master
    app.kubernetes.io/name: locust
    app.kubernetes.io/instance: locust
    load_test: my-loadtest
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: locust-metrics-servicemonitor
  # Change this to the namespace the Prometheus instance is running in
  # namespace: default
  labels:
    type: locust-master
spec:
  selector:
    matchLabels:
      load_test: my-loadtest
  endpoints:
  - port: metrics
    interval: 15s
---
# Source: locust/templates/master-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust-master
  labels:
    component: master
    helm.sh/chart: locust-0.20.2
    app.kubernetes.io/name: locust
    app.kubernetes.io/instance: locust
    load_test: my-loadtest
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      component: master
      app.kubernetes.io/name: locust
      app.kubernetes.io/instance: locust
      load_test: my-loadtest
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-locust-lib: 96a1ea8bd827fcfb1ca126127f788141dc95e16891c1208eeb316d8775cd54a6
        checksum/config-locust-locustfile: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config-config: 97c28a9f73bb8e73f91901a78e5114ca007f94d899b4a053cfd4224256e42d81
        checksum/config-secret: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        component: master
        app.kubernetes.io/name: locust
        app.kubernetes.io/instance: locust
        load_test: my-loadtest
    spec:
      securityContext:
        {}
      serviceAccountName: locust-master
      containers:
      - name: locust-exporter 
        image: "containersol/locust_exporter"
        ports:
          - containerPort: 9646
            name: locustm-met
      - name: locust
        securityContext:
            {}
        image: "locustio/locust:2.1.0"
        command:
        - sh
        - /config/docker-entrypoint.sh
        args:
          - --master
        imagePullPolicy: IfNotPresent
        resources:
          {}
        volumeMounts:
          - name: locustfile
            mountPath: /mnt/locust
          - name: lib
            mountPath: /mnt/locust/lib
          - name: config
            mountPath: /config
        env:
          - name: LOCUST_HOST
            value: "https://www.google.com"
          - name: LOCUST_LOGLEVEL
            value: "INFO"
          - name: LOCUST_LOCUSTFILE
            value: "/mnt/locust/locustfile.py"
        ports:
          - containerPort: 8089
            name: loc-master-web
            protocol: TCP
          - containerPort: 5557
            name: loc-master-p1
            protocol: TCP
          - containerPort: 5558
            name: loc-master-p2
            protocol: TCP
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 2
          httpGet:
            path: /
            port: 8089
      restartPolicy: Always
      volumes:
        - name: lib
          configMap:
            name: locust-lib
        - name: locustfile
          configMap:
            name: my-loadtest-locustfile
        - name: config
          configMap:
            name: locust-config
---
# Source: locust/templates/worker-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust-worker
  labels:
    component: worker
    helm.sh/chart: locust-0.20.2
    app.kubernetes.io/name: locust
    app.kubernetes.io/instance: locust
    load_test: my-loadtest
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      component: worker
      app.kubernetes.io/name: locust
      app.kubernetes.io/instance: locust
      load_test: my-loadtest
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-locust-lib: 96a1ea8bd827fcfb1ca126127f788141dc95e16891c1208eeb316d8775cd54a6
        checksum/config-locust-locustfile: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config-config: 97c28a9f73bb8e73f91901a78e5114ca007f94d899b4a053cfd4224256e42d81
        checksum/config-secret: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        component: worker
        app.kubernetes.io/name: locust
        app.kubernetes.io/instance: locust
        load_test: my-loadtest
    spec:
      securityContext:
        {}
      serviceAccountName: locust-worker
      containers:
      - name: locust-exporter 
        image: "containersol/locust_exporter"
        ports:
          - containerPort: 9646
            name: locustw-met
      - name: locust
        securityContext:
            {}
        image: "locustio/locust:2.1.0"
        command:
        - sh
        - /config/docker-entrypoint.sh
        args:
          - --worker
        imagePullPolicy: IfNotPresent
        resources:
          {}
        volumeMounts:
          - name: locustfile
            mountPath: /mnt/locust
          - name: lib
            mountPath: /mnt/locust/lib
          - name: config
            mountPath: /config
        env:
          - name: LOCUST_HOST
            value: "https://www.google.com"
          - name: LOCUST_MASTER_NODE_HOST
            value: "locust"
          - name: LOCUST_MASTER_NODE_PORT
            value: "5557"
          - name: LOCUST_LOGLEVEL
            value: "INFO"
          - name: LOCUST_LOCUSTFILE
            value: "/mnt/locust/locustfile.py"
      restartPolicy: Always
      volumes:
        - name: lib
          configMap:
            name: locust-lib
        - name: locustfile
          configMap:
            name: my-loadtest-locustfile
        - name: config
          configMap:
            name: locust-config
